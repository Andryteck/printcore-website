'use client';

import { useState, useEffect } from 'react';
import { useAppSelector, useAppDispatch } from '@/lib/store';
import { useRouter } from 'next/navigation';
import Header from '@/components/Header';
import Footer from '@/components/Footer';
import Link from 'next/link';
import axios from 'axios';
import { clearCart } from '@/lib/features/cart/cartSlice';

interface CustomerData {
  email: string;
  firstName: string;
  lastName: string;
  phone: string;
  comment?: string;
}

export default function CheckoutPage() {
  const router = useRouter();
  const dispatch = useAppDispatch();
  const { items, total } = useAppSelector((state) => state.cart);
  const { user, isAuthenticated } = useAppSelector((state) => state.auth);

  const [customerData, setCustomerData] = useState<CustomerData>({
    email: user?.email || '',
    firstName: user?.name?.split(' ')[0] || '',
    lastName: user?.name?.split(' ').slice(1).join(' ') || '',
    phone: user?.phone || '',
    comment: '',
  });

  const [paymentMethod, setPaymentMethod] = useState<'online' | 'cash'>('online');
  const [isProcessing, setIsProcessing] = useState(false);
  const [error, setError] = useState('');

  // –ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ–º –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É –≤—Ö–æ–¥–∞ –µ—Å–ª–∏ –Ω–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω
  useEffect(() => {
    if (!isAuthenticated) {
      router.push('/login?redirect=/checkout');
    }
  }, [isAuthenticated, router]);

  // –ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ–º –≤ –∫–æ—Ä–∑–∏–Ω—É –µ—Å–ª–∏ –æ–Ω–∞ –ø—É—Å—Ç–∞—è
  useEffect(() => {
    if (items.length === 0) {
      router.push('/cart');
    }
  }, [items, router]);

  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) => {
    const { name, value } = e.target;
    setCustomerData(prev => ({ ...prev, [name]: value }));
  };

  const validateForm = (): boolean => {
    if (!customerData.email || !customerData.firstName || !customerData.phone) {
      setError('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∑–∞–ø–æ–ª–Ω–∏—Ç–µ –≤—Å–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–æ–ª—è');
      return false;
    }

    // –ü—Ä–æ—Å—Ç–∞—è –≤–∞–ª–∏–¥–∞—Ü–∏—è email
    const emailRegex = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
    if (!emailRegex.test(customerData.email)) {
      setError('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π email');
      return false;
    }

    // –ü—Ä–æ—Å—Ç–∞—è –≤–∞–ª–∏–¥–∞—Ü–∏—è —Ç–µ–ª–µ—Ñ–æ–Ω–∞
    const phoneRegex = /^\+?[0-9\s\-\(\)]{9,}$/;
    if (!phoneRegex.test(customerData.phone)) {
      setError('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞');
      return false;
    }

    return true;
  };

  const handleSubmit = async (e: React.FormEvent) => {
    e.preventDefault();
    setError('');

    if (!validateForm()) {
      return;
    }

    setIsProcessing(true);

    try {
      if (paymentMethod === 'online') {
        // –°–æ–∑–¥–∞–µ–º –ø–ª–∞—Ç–µ–∂ —á–µ—Ä–µ–∑ BePaid
        const response = await axios.post('/api/payments/create', {
          amount: total,
          currency: 'BYN',
          description: `–ó–∞–∫–∞–∑ PrintCore (${items.length} —Ç–æ–≤–∞—Ä–æ–≤)`,
          customer: {
            email: customerData.email,
            first_name: customerData.firstName,
            last_name: customerData.lastName,
            phone: customerData.phone,
          },
          items: items.map(item => ({
            name: item.title,
            quantity: item.quantity,
            price: item.price,
          })),
          comment: customerData.comment,
        });

        if (response.data.success) {
          // –°–æ—Ö—Ä–∞–Ω—è–µ–º ID –∑–∞–∫–∞–∑–∞ –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è
          localStorage.setItem('currentOrderId', response.data.orderId);
          
          // –û—á–∏—â–∞–µ–º –∫–æ—Ä–∑–∏–Ω—É
          dispatch(clearCart());
          
          // –ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ–º –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É –æ–ø–ª–∞—Ç—ã BePaid
          window.location.href = response.data.checkoutUrl;
        } else {
          setError('–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –ø–ª–∞—Ç–µ–∂–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.');
        }
      } else {
        // –û–ø–ª–∞—Ç–∞ –Ω–∞–ª–∏—á–Ω—ã–º–∏ - —Å–æ–∑–¥–∞–µ–º –∑–∞–∫–∞–∑ –±–µ–∑ –æ–ø–ª–∞—Ç—ã
        // –ó–¥–µ—Å—å –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –ª–æ–≥–∏–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –∑–∞–∫–∞–∑–∞ –≤ –ë–î
        console.log('–°–æ–∑–¥–∞–Ω –∑–∞–∫–∞–∑ —Å –æ–ø–ª–∞—Ç–æ–π –Ω–∞–ª–∏—á–Ω—ã–º–∏:', {
          customer: customerData,
          items,
          total,
        });
        
        // –û—á–∏—â–∞–µ–º –∫–æ—Ä–∑–∏–Ω—É
        dispatch(clearCart());
        
        // –ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ–º –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É —É—Å–ø–µ—Ö–∞
        router.push('/payment/success?method=cash');
      }
    } catch (err) {
      console.error('Checkout error:', err);
      setError('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏–∏ –∑–∞–∫–∞–∑–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.');
    } finally {
      setIsProcessing(false);
    }
  };

  if (!isAuthenticated || items.length === 0) {
    return null;
  }

  return (
    <>
      <Header />
      
      <main className="min-h-screen py-20 bg-gray-950">
        <div className="container mx-auto px-4">
          {/* Breadcrumbs */}
          <nav className="mb-8 text-sm text-gray-400">
            <Link href="/" className="hover:text-blue-400">–ì–ª–∞–≤–Ω–∞—è</Link>
            <span className="mx-2">/</span>
            <Link href="/cart" className="hover:text-blue-400">–ö–æ—Ä–∑–∏–Ω–∞</Link>
            <span className="mx-2">/</span>
            <span className="text-white">–û—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ –∑–∞–∫–∞–∑–∞</span>
          </nav>

          {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ */}
          <div className="mb-8">
            <h1 className="text-4xl font-bold mb-2">
              üì¶ –û—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ –∑–∞–∫–∞–∑–∞
            </h1>
            <p className="text-gray-400">
              –ó–∞–ø–æ–ª–Ω–∏—Ç–µ –∫–æ–Ω—Ç–∞–∫—Ç–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –∏ –≤—ã–±–µ—Ä–∏—Ç–µ —Å–ø–æ—Å–æ–± –æ–ø–ª–∞—Ç—ã
            </p>
          </div>

          <form onSubmit={handleSubmit} className="grid grid-cols-1 lg:grid-cols-3 gap-8">
            {/* –§–æ—Ä–º–∞ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è */}
            <div className="lg:col-span-2 space-y-6">
              {/* –û—à–∏–±–∫–∏ */}
              {error && (
                <div className="bg-red-500/10 border border-red-500 text-red-400 px-6 py-4 rounded-xl">
                  ‚ö†Ô∏è {error}
                </div>
              )}

              {/* –ö–æ–Ω—Ç–∞–∫—Ç–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è */}
              <div className="bg-gray-900 border border-gray-800 rounded-2xl p-6">
                <h2 className="text-2xl font-bold mb-6">–ö–æ–Ω—Ç–∞–∫—Ç–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è</h2>
                
                <div className="space-y-4">
                  <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
                    <div>
                      <label className="block text-sm font-medium text-gray-400 mb-2">
                        –ò–º—è *
                      </label>
                      <input
                        type="text"
                        name="firstName"
                        value={customerData.firstName}
                        onChange={handleInputChange}
                        required
                        className="w-full bg-gray-800 border border-gray-700 rounded-xl px-4 py-3 text-white focus:border-blue-500 focus:outline-none transition-colors"
                        placeholder="–ò–≤–∞–Ω"
                      />
                    </div>
                    
                    <div>
                      <label className="block text-sm font-medium text-gray-400 mb-2">
                        –§–∞–º–∏–ª–∏—è
                      </label>
                      <input
                        type="text"
                        name="lastName"
                        value={customerData.lastName}
                        onChange={handleInputChange}
                        className="w-full bg-gray-800 border border-gray-700 rounded-xl px-4 py-3 text-white focus:border-blue-500 focus:outline-none transition-colors"
                        placeholder="–ò–≤–∞–Ω–æ–≤"
                      />
                    </div>
                  </div>

                  <div>
                    <label className="block text-sm font-medium text-gray-400 mb-2">
                      Email *
                    </label>
                    <input
                      type="email"
                      name="email"
                      value={customerData.email}
                      onChange={handleInputChange}
                      required
                      className="w-full bg-gray-800 border border-gray-700 rounded-xl px-4 py-3 text-white focus:border-blue-500 focus:outline-none transition-colors"
                      placeholder="ivan@example.com"
                    />
                  </div>

                  <div>
                    <label className="block text-sm font-medium text-gray-400 mb-2">
                      –¢–µ–ª–µ—Ñ–æ–Ω *
                    </label>
                    <input
                      type="tel"
                      name="phone"
                      value={customerData.phone}
                      onChange={handleInputChange}
                      required
                      className="w-full bg-gray-800 border border-gray-700 rounded-xl px-4 py-3 text-white focus:border-blue-500 focus:outline-none transition-colors"
                      placeholder="+375 29 123-45-67"
                    />
                  </div>

                  <div>
                    <label className="block text-sm font-medium text-gray-400 mb-2">
                      –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –∫ –∑–∞–∫–∞–∑—É
                    </label>
                    <textarea
                      name="comment"
                      value={customerData.comment}
                      onChange={handleInputChange}
                      rows={3}
                      className="w-full bg-gray-800 border border-gray-700 rounded-xl px-4 py-3 text-white focus:border-blue-500 focus:outline-none transition-colors resize-none"
                      placeholder="–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∑–∞–∫–∞–∑–µ"
                    />
                  </div>
                </div>
              </div>

              {/* –°–ø–æ—Å–æ–± –æ–ø–ª–∞—Ç—ã */}
              <div className="bg-gray-900 border border-gray-800 rounded-2xl p-6">
                <h2 className="text-2xl font-bold mb-6">–°–ø–æ—Å–æ–± –æ–ø–ª–∞—Ç—ã</h2>
                
                <div className="space-y-3">
                  {/* –û–Ω–ª–∞–π–Ω –æ–ø–ª–∞—Ç–∞ */}
                  <label className={`block bg-gray-800 border-2 rounded-xl p-4 cursor-pointer transition-all ${
                    paymentMethod === 'online' ? 'border-blue-500 bg-blue-500/5' : 'border-gray-700 hover:border-gray-600'
                  }`}>
                    <div className="flex items-center gap-4">
                      <input
                        type="radio"
                        name="paymentMethod"
                        value="online"
                        checked={paymentMethod === 'online'}
                        onChange={(e) => setPaymentMethod(e.target.value as 'online')}
                        className="w-5 h-5 text-blue-600"
                      />
                      <div className="flex-1">
                        <div className="font-semibold text-lg mb-1">üí≥ –û–Ω–ª–∞–π–Ω –æ–ø–ª–∞—Ç–∞ (BePaid)</div>
                        <div className="text-sm text-gray-400">
                          –û–ø–ª–∞—Ç–∞ –±–∞–Ω–∫–æ–≤—Å–∫–æ–π –∫–∞—Ä—Ç–æ–π —á–µ—Ä–µ–∑ –∑–∞—â–∏—â–µ–Ω–Ω—ã–π –ø–ª–∞—Ç–µ–∂–Ω—ã–π —à–ª—é–∑
                        </div>
                        <div className="flex gap-2 mt-2">
                          <span className="text-xs bg-gray-700 px-2 py-1 rounded">Visa</span>
                          <span className="text-xs bg-gray-700 px-2 py-1 rounded">Mastercard</span>
                          <span className="text-xs bg-gray-700 px-2 py-1 rounded">–ë–µ–ª–∫–∞—Ä—Ç</span>
                        </div>
                      </div>
                    </div>
                  </label>

                  {/* –û–ø–ª–∞—Ç–∞ –Ω–∞–ª–∏—á–Ω—ã–º–∏ */}
                  <label className={`block bg-gray-800 border-2 rounded-xl p-4 cursor-pointer transition-all ${
                    paymentMethod === 'cash' ? 'border-blue-500 bg-blue-500/5' : 'border-gray-700 hover:border-gray-600'
                  }`}>
                    <div className="flex items-center gap-4">
                      <input
                        type="radio"
                        name="paymentMethod"
                        value="cash"
                        checked={paymentMethod === 'cash'}
                        onChange={(e) => setPaymentMethod(e.target.value as 'cash')}
                        className="w-5 h-5 text-blue-600"
                      />
                      <div className="flex-1">
                        <div className="font-semibold text-lg mb-1">üíµ –û–ø–ª–∞—Ç–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏</div>
                        <div className="text-sm text-gray-400">
                          –û–ø–ª–∞—Ç–∞ –Ω–∞–ª–∏—á–Ω—ã–º–∏ –∏–ª–∏ –∫–∞—Ä—Ç–æ–π –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∑–∞–∫–∞–∑–∞
                        </div>
                      </div>
                    </div>
                  </label>
                </div>
              </div>
            </div>

            {/* –°–≤–æ–¥–∫–∞ –∑–∞–∫–∞–∑–∞ */}
            <div className="lg:col-span-1">
              <div className="bg-gray-900 border border-gray-800 rounded-2xl p-6 sticky top-24">
                <h2 className="text-2xl font-bold mb-6">–í–∞—à –∑–∞–∫–∞–∑</h2>

                {/* –°–ø–∏—Å–æ–∫ —Ç–æ–≤–∞—Ä–æ–≤ */}
                <div className="space-y-3 mb-6 max-h-64 overflow-y-auto">
                  {items.map((item) => (
                    <div key={item.id} className="flex gap-3 text-sm">
                      <div className="w-12 h-12 flex-shrink-0 rounded-lg bg-gray-800 overflow-hidden">
                        {item.image ? (
                          <img src={item.image} alt={item.title} className="w-full h-full object-cover" />
                        ) : (
                          <div className="w-full h-full flex items-center justify-center text-lg">üì¶</div>
                        )}
                      </div>
                      <div className="flex-1 min-w-0">
                        <div className="font-medium mb-1 truncate">{item.title}</div>
                        <div className="text-gray-400">
                          {item.price.toFixed(2)} BYN √ó {item.quantity}
                        </div>
                      </div>
                      <div className="font-semibold text-blue-400">
                        {(item.price * item.quantity).toFixed(2)} BYN
                      </div>
                    </div>
                  ))}
                </div>

                {/* –ò—Ç–æ–≥–æ */}
                <div className="space-y-3 pt-6 border-t border-gray-800">
                  <div className="flex justify-between text-gray-400">
                    <span>–¢–æ–≤–∞—Ä—ã ({items.length}):</span>
                    <span className="font-semibold">{total.toFixed(2)} BYN</span>
                  </div>
                  <div className="flex justify-between text-gray-400">
                    <span>–î–æ—Å—Ç–∞–≤–∫–∞:</span>
                    <span className="font-semibold">–£—Ç–æ—á–Ω–∏—Ç –º–µ–Ω–µ–¥–∂–µ—Ä</span>
                  </div>
                  <div className="h-px bg-gray-800"></div>
                  <div className="flex justify-between text-xl font-bold">
                    <span>–ò—Ç–æ–≥–æ:</span>
                    <span className="text-blue-400">{total.toFixed(2)} BYN</span>
                  </div>
                </div>

                {/* –ö–Ω–æ–ø–∫–∞ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è */}
                <button
                  type="submit"
                  disabled={isProcessing}
                  className="w-full mt-6 bg-gradient-to-r from-blue-600 to-cyan-500 hover:from-blue-700 hover:to-cyan-600 disabled:from-gray-700 disabled:to-gray-600 disabled:cursor-not-allowed text-white px-6 py-4 rounded-xl font-bold transition-all"
                >
                  {isProcessing ? (
                    <span className="flex items-center justify-center gap-2">
                      <span className="animate-spin">‚è≥</span>
                      –û–±—Ä–∞–±–æ—Ç–∫–∞...
                    </span>
                  ) : paymentMethod === 'online' ? (
                    'üí≥ –ü–µ—Ä–µ–π—Ç–∏ –∫ –æ–ø–ª–∞—Ç–µ'
                  ) : (
                    '‚úì –û—Ñ–æ—Ä–º–∏—Ç—å –∑–∞–∫–∞–∑'
                  )}
                </button>

                {/* –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è */}
                <div className="mt-6 pt-6 border-t border-gray-800 space-y-3 text-sm text-gray-400">
                  <div className="flex items-start gap-2">
                    <span>üîí</span>
                    <span>–ë–µ–∑–æ–ø–∞—Å–Ω–∞—è –æ–ø–ª–∞—Ç–∞</span>
                  </div>
                  <div className="flex items-start gap-2">
                    <span>‚úì</span>
                    <span>–ì–∞—Ä–∞–Ω—Ç–∏—è –∫–∞—á–µ—Å—Ç–≤–∞</span>
                  </div>
                  <div className="flex items-start gap-2">
                    <span>üìû</span>
                    <span>–ü–æ–¥–¥–µ—Ä–∂–∫–∞ 24/7</span>
                  </div>
                </div>
              </div>
            </div>
          </form>
        </div>
      </main>

      <Footer />
    </>
  );
}

