'use client';

import { useState, ChangeEvent, FormEvent } from 'react';
import Header from '@/components/Header';
import Footer from '@/components/Footer';
import Link from 'next/link';
import styles from './design.module.css';

// Note: metadata export cannot be used in client components
// SEO is handled through custom Head component or layout

interface FormData {
  name: string;
  phone: string;
  email: string;
  service: string;
  description: string;
}

export default function DesignOrderPage() {
  const [formData, setFormData] = useState<FormData>({
    name: '',
    phone: '',
    email: '',
    service: '',
    description: ''
  });

  const [files, setFiles] = useState<FileList | null>(null);
  const [isSubmitting, setIsSubmitting] = useState(false);
  const [showSuccess, setShowSuccess] = useState(false);
  const [showError, setShowError] = useState(false);

  const services = [
    {
      icon: 'üí≥',
      title: '–î–∏–∑–∞–π–Ω –≤–∏–∑–∏—Ç–æ–∫',
      description: '–û—Ç –∫–ª–∞—Å—Å–∏—á–µ—Å–∫–∏—Ö –¥–æ –ø—Ä–µ–º–∏—É–º-–≤–∏–∑–∏—Ç–æ–∫ —Å –∑–æ–ª–æ—Ç—ã–º —Ç–∏—Å–Ω–µ–Ω–∏–µ–º',
      value: 'business-card'
    },
    {
      icon: 'üìÑ',
      title: '–î–∏–∑–∞–π–Ω –ª–∏—Å—Ç–æ–≤–æ–∫ –∏ —Ñ–ª–∞–µ—Ä–æ–≤',
      description: '–Ø—Ä–∫–∏–µ –∏ –ø—Ä–∏–≤–ª–µ–∫–∞—é—â–∏–µ –≤–Ω–∏–º–∞–Ω–∏–µ –º–∞–∫–µ—Ç—ã –¥–ª—è –≤–∞—à–µ–π —Ä–µ–∫–ª–∞–º—ã',
      value: 'leaflets'
    },
    {
      icon: 'üìö',
      title: '–î–∏–∑–∞–π–Ω –±—Ä–æ—à—é—Ä –∏ –∫–∞—Ç–∞–ª–æ–≥–æ–≤',
      description: '–ú–Ω–æ–≥–æ—Å—Ç—Ä–∞–Ω–∏—á–Ω—ã–µ –∏–∑–¥–∞–Ω–∏—è —Å –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω–æ–π –≤–µ—Ä—Å—Ç–∫–æ–π',
      value: 'brochures'
    },
    {
      icon: '¬©Ô∏è',
      title: '–†–∞–∑—Ä–∞–±–æ—Ç–∫–∞ –ª–æ–≥–æ—Ç–∏–ø–∞',
      description: '–£–Ω–∏–∫–∞–ª—å–Ω—ã–π —Ñ–∏—Ä–º–µ–Ω–Ω—ã–π –∑–Ω–∞–∫ –¥–ª—è –≤–∞—à–µ–≥–æ –±—Ä–µ–Ω–¥–∞',
      value: 'logo'
    },
    {
      icon: 'üé®',
      title: '–§–∏—Ä–º–µ–Ω–Ω—ã–π —Å—Ç–∏–ª—å',
      description: '–ü–æ–ª–Ω—ã–π –ø–∞–∫–µ—Ç –±—Ä–µ–Ω–¥–∏–Ω–≥–∞: –æ—Ç –ª–æ–≥–æ—Ç–∏–ø–∞ –¥–æ –≥–∞–π–¥–ª–∞–π–Ω–∞',
      value: 'brand'
    },
    {
      icon: 'üì¶',
      title: '–î–∏–∑–∞–π–Ω —É–ø–∞–∫–æ–≤–∫–∏',
      description: '–ü—Ä–∏–≤–ª–µ–∫–∞—Ç–µ–ª—å–Ω—ã–π –¥–∏–∑–∞–π–Ω –¥–ª—è –≤–∞—à–µ–π –ø—Ä–æ–¥—É–∫—Ü–∏–∏',
      value: 'packaging'
    },
    {
      icon: 'üñºÔ∏è',
      title: '–ü–æ—Å—Ç–µ—Ä –∏ –ø–ª–∞–∫–∞—Ç—ã',
      description: '–û—Ç –∞—Ñ–∏—à –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–π –¥–æ –∏–Ω—Ç–µ—Ä—å–µ—Ä–Ω—ã—Ö –ø–æ—Å—Ç–µ—Ä–æ–≤',
      value: 'poster'
    },
    {
      icon: '‚úâÔ∏è',
      title: '–î–∏–∑–∞–π–Ω –ø—Ä–∏–≥–ª–∞—Å–∏—Ç–µ–ª—å–Ω—ã—Ö',
      description: '–≠–ª–µ–≥–∞–Ω—Ç–Ω—ã–µ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏—è –¥–ª—è –æ—Å–æ–±—ã—Ö —Å–æ–±—ã—Ç–∏–π',
      value: 'invitation'
    }
  ];

  const features = [
    {
      icon: 'üèÜ',
      title: '–û–ø—ã—Ç–Ω—ã–µ –¥–∏–∑–∞–π–Ω–µ—Ä—ã',
      description: '–ë–æ–ª–µ–µ 10 –ª–µ—Ç –æ–ø—ã—Ç–∞ –≤ –ø–æ–ª–∏–≥—Ä–∞—Ñ–∏—á–µ—Å–∫–æ–º –¥–∏–∑–∞–π–Ω–µ'
    },
    {
      icon: 'üöÄ',
      title: '–ë—ã—Å—Ç—Ä—ã–µ —Å—Ä–æ–∫–∏',
      description: '–ü–µ—Ä–≤—ã–µ –∫–æ–Ω—Ü–µ–ø—Ç—ã —á–µ—Ä–µ–∑ 1-2 –¥–Ω—è'
    },
    {
      icon: 'üîÑ',
      title: '–ë–µ—Å–ø–ª–∞—Ç–Ω—ã–µ –ø—Ä–∞–≤–∫–∏',
      description: '–î–æ 3 –ø—Ä–∞–≤–æ–∫ –≤–∫–ª—é—á–µ–Ω—ã –≤ —Å—Ç–æ–∏–º–æ—Å—Ç—å'
    },
    {
      icon: 'üìÅ',
      title: '–ò—Å—Ö–æ–¥–Ω–∏–∫–∏ –≤ –ø–æ–¥–∞—Ä–æ–∫',
      description: '–í—Å–µ —Ñ–∞–π–ª—ã –≤ —É–¥–æ–±–Ω—ã—Ö —Ñ–æ—Ä–º–∞—Ç–∞—Ö'
    }
  ];

  const handleInputChange = (e: ChangeEvent<HTMLInputElement | HTMLSelectElement | HTMLTextAreaElement>) => {
    const { name, value } = e.target;
    setFormData(prev => ({ ...prev, [name]: value }));
  };

  const handlePhoneInput = (e: ChangeEvent<HTMLInputElement>) => {
    let value = e.target.value.replace(/\D/g, '');
    if (value.length > 0 && value[0] === '3') {
      value = '375' + value.substring(3);
    }

    let formatted = value;
    if (value.startsWith('375')) {
      formatted = '+375';
      if (value.length > 3) formatted += ' (' + value.substring(3, 5);
      if (value.length > 5) formatted += ') ' + value.substring(5, 8);
      if (value.length > 8) formatted += '-' + value.substring(8, 10);
      if (value.length > 10) formatted += '-' + value.substring(10, 12);
    }

    setFormData(prev => ({ ...prev, phone: formatted }));
  };

  const handleFileChange = (e: ChangeEvent<HTMLInputElement>) => {
    setFiles(e.target.files);
  };

  const handleSubmit = async (e: FormEvent<HTMLFormElement>) => {
    e.preventDefault();
    setIsSubmitting(true);
    setShowSuccess(false);
    setShowError(false);

    const WEB3FORMS_ACCESS_KEY = 'dd5abd14-7c0c-4f05-9938-90d555fc6a48';

    const submitData = {
      access_key: WEB3FORMS_ACCESS_KEY,
      subject: '–ù–æ–≤—ã–π –∑–∞–∫–∞–∑ –¥–∏–∑–∞–π–Ω–∞ –ø–æ–ª–∏–≥—Ä–∞—Ñ–∏–∏ - PrintCore',
      from_name: formData.name,
      email: formData.email || 'noreply@printcore.by',
      '–ò–º—è –∫–ª–∏–µ–Ω—Ç–∞': formData.name,
      '–¢–µ–ª–µ—Ñ–æ–Ω': formData.phone,
      'Email –∫–ª–∏–µ–Ω—Ç–∞': formData.email || '–Ω–µ —É–∫–∞–∑–∞–Ω',
      '–£—Å–ª—É–≥–∞': formData.service,
      '–û–ø–∏—Å–∞–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–∞': formData.description
    };

    if (files && files.length > 0) {
      const fileNames = Array.from(files).map(f => f.name).join(', ');
      Object.assign(submitData, {
        '–ü—Ä–∏–∫—Ä–µ–ø–ª–µ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã': `–§–∞–π–ª–æ–≤: ${files.length} - ${fileNames}`
      });
    }

    try {
      const response = await fetch('https://api.web3forms.com/submit', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
          'Accept': 'application/json'
        },
        body: JSON.stringify(submitData)
      });

      const result = await response.json();

      if (response.ok && result.success) {
        setShowSuccess(true);
        setFormData({
          name: '',
          phone: '',
          email: '',
          service: '',
          description: ''
        });
        setFiles(null);
        
        setTimeout(() => {
          setShowSuccess(false);
        }, 5000);
      } else {
        throw new Error(result.message || '–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏');
      }
    } catch (error) {
      console.error('Error:', error);
      setShowError(true);
      setTimeout(() => {
        setShowError(false);
      }, 5000);
    } finally {
      setIsSubmitting(false);
    }
  };

  return (
    <>
      <Header />
      
      {/* Structured Data for SEO */}
      <script
        type="application/ld+json"
        dangerouslySetInnerHTML={{
          __html: JSON.stringify({
            "@context": "https://schema.org",
            "@type": "Service",
            "name": "–î–∏–∑–∞–π–Ω –ø–æ–ª–∏–≥—Ä–∞—Ñ–∏–∏",
            "description": "–ü—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–π –¥–∏–∑–∞–π–Ω –≤–∏–∑–∏—Ç–æ–∫, –ª–∏—Å—Ç–æ–≤–æ–∫, –±—Ä–æ—à—é—Ä, –ª–æ–≥–æ—Ç–∏–ø–æ–≤ –∏ —Ñ–∏—Ä–º–µ–Ω–Ω–æ–≥–æ —Å—Ç–∏–ª—è –≤ –ú–∏–Ω—Å–∫–µ",
            "provider": {
              "@type": "LocalBusiness",
              "name": "PrintCore",
              "address": {
                "@type": "PostalAddress",
                "streetAddress": "–ø—Ä. –î–∑–µ—Ä–∂–∏–Ω—Å–∫–æ–≥–æ 3–ë",
                "addressLocality": "–ú–∏–Ω—Å–∫",
                "addressCountry": "BY"
              },
              "telephone": "+375333365678"
            },
            "areaServed": "BY",
            "offers": {
              "@type": "Offer",
              "priceCurrency": "BYN",
              "price": "17",
              "priceSpecification": {
                "@type": "PriceSpecification",
                "minPrice": "17",
                "priceCurrency": "BYN"
              }
            }
          })
        }}
      />
      
      <div className={styles.container}>
        <div className={styles.contentWrapper}>
          {/* Header */}
          <div className={styles.header}>
            <h1>
              <span className={styles.icon}>üé®</span> –î–∏–∑–∞–π–Ω –ø–æ–ª–∏–≥—Ä–∞—Ñ–∏–∏
            </h1>
            <p>–°–æ–∑–¥–∞–¥–∏–º —É–Ω–∏–∫–∞–ª—å–Ω—ã–π –¥–∏–∑–∞–π–Ω –¥–ª—è –≤–∞—à–µ–≥–æ –±–∏–∑–Ω–µ—Å–∞</p>
          </div>

          {/* Main Content */}
          <div className={styles.mainContent}>
            {/* Services Card */}
            <div className={styles.servicesCard}>
              <h2>
                <span className={styles.sectionIcon}>‚ú®</span> –ù–∞—à–∏ —É—Å–ª—É–≥–∏
              </h2>
              <ul className={styles.serviceList}>
                {services.map((service, index) => (
                  <li key={index} className={styles.serviceItem}>
                    <span className={styles.serviceIcon}>{service.icon}</span>
                    <div>
                      <strong>{service.title}</strong>
                      <p>{service.description}</p>
                    </div>
                  </li>
                ))}
              </ul>
            </div>

            {/* Order Form Card */}
            <div className={styles.orderFormCard}>
              <h2>
                <span className={styles.sectionIcon}>üìù</span> –§–æ—Ä–º–∞ –∑–∞–∫–∞–∑–∞
              </h2>
              <form onSubmit={handleSubmit}>
                <div className={styles.formGroup}>
                  <label htmlFor="name">–í–∞—à–µ –∏–º—è *</label>
                  <input
                    type="text"
                    id="name"
                    name="name"
                    value={formData.name}
                    onChange={handleInputChange}
                    required
                    placeholder="–ò–≤–∞–Ω –ò–≤–∞–Ω–æ–≤"
                  />
                </div>

                <div className={styles.formGroup}>
                  <label htmlFor="phone">–¢–µ–ª–µ—Ñ–æ–Ω *</label>
                  <input
                    type="tel"
                    id="phone"
                    name="phone"
                    value={formData.phone}
                    onChange={handlePhoneInput}
                    required
                    placeholder="+375 (33) 123-45-67"
                  />
                </div>

                <div className={styles.formGroup}>
                  <label htmlFor="email">Email</label>
                  <input
                    type="email"
                    id="email"
                    name="email"
                    value={formData.email}
                    onChange={handleInputChange}
                    placeholder="example@mail.com"
                  />
                </div>

                <div className={styles.formGroup}>
                  <label htmlFor="service">–í—ã–±–µ—Ä–∏—Ç–µ —É—Å–ª—É–≥—É *</label>
                  <select
                    id="service"
                    name="service"
                    value={formData.service}
                    onChange={handleInputChange}
                    required
                  >
                    <option value="">-- –í—ã–±–µ—Ä–∏—Ç–µ —É—Å–ª—É–≥—É --</option>
                    {services.map((service, index) => (
                      <option key={index} value={service.value}>
                        {service.title}
                      </option>
                    ))}
                    <option value="other">–î—Ä—É–≥–æ–µ</option>
                  </select>
                </div>

                <div className={styles.formGroup}>
                  <label htmlFor="description">–û–ø–∏—Å–∞–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–∞ *</label>
                  <textarea
                    id="description"
                    name="description"
                    value={formData.description}
                    onChange={handleInputChange}
                    required
                    placeholder="–û–ø–∏—à–∏—Ç–µ –≤–∞—à–∏ –ø–æ–∂–µ–ª–∞–Ω–∏—è, —Ü–µ–ª–µ–≤—É—é –∞—É–¥–∏—Ç–æ—Ä–∏—é, —Å—Ç–∏–ª—å, —Ü–≤–µ—Ç–∞ –∏ —Ç.–¥."
                  />
                </div>

                <div className={styles.formGroup}>
                  <label>–ü—Ä–∏–ª–æ–∂–∏—Ç—å —Ñ–∞–π–ª—ã (–ø—Ä–∏–º–µ—Ä—ã, –±—Ä–µ–Ω–¥–±—É–∫, –ª–æ–≥–æ—Ç–∏–ø)</label>
                  <div className={styles.fileUpload}>
                    <input
                      type="file"
                      id="files"
                      name="files"
                      onChange={handleFileChange}
                      multiple
                      accept=".jpg,.jpeg,.png,.pdf,.ai,.psd"
                    />
                    <label htmlFor="files" className={styles.fileUploadLabel}>
                      <span className={styles.uploadIcon}>‚òÅÔ∏è</span>
                      <span>
                        {files && files.length > 0
                          ? `–í—ã–±—Ä–∞–Ω–æ —Ñ–∞–π–ª–æ–≤: ${files.length}`
                          : '–í—ã–±—Ä–∞—Ç—å —Ñ–∞–π–ª—ã'}
                      </span>
                    </label>
                  </div>
                </div>

                <button
                  type="submit"
                  className={styles.submitBtn}
                  disabled={isSubmitting}
                >
                  {isSubmitting ? (
                    <>
                      <span className={styles.spinner}>‚è≥</span>
                      –û—Ç–ø—Ä–∞–≤–∫–∞...
                    </>
                  ) : (
                    <>
                      <span>‚úàÔ∏è</span>
                      –û—Ç–ø—Ä–∞–≤–∏—Ç—å –∑–∞–∫–∞–∑
                    </>
                  )}
                </button>

                {showSuccess && (
                  <div className={styles.successMessage}>
                    <span className={styles.messageIcon}>‚úÖ</span>
                    <p>–°–ø–∞—Å–∏–±–æ! –í–∞—à–∞ –∑–∞—è–≤–∫–∞ –ø—Ä–∏–Ω—è—Ç–∞. –ú—ã —Å–≤—è–∂–µ–º—Å—è —Å –≤–∞–º–∏ –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è.</p>
                  </div>
                )}

                {showError && (
                  <div className={styles.errorMessage}>
                    <span className={styles.messageIcon}>‚ö†Ô∏è</span>
                    <p>–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–∑–≤–æ–Ω–∏—Ç–µ –Ω–∞–º: +375 33 336 5678</p>
                  </div>
                )}
              </form>
            </div>
          </div>

          {/* Features */}
          <div className={styles.features}>
            <h2>–ü–æ—á–µ–º—É –≤—ã–±–∏—Ä–∞—é—Ç –Ω–∞—Å?</h2>
            <div className={styles.featuresGrid}>
              {features.map((feature, index) => (
                <div key={index} className={styles.featureItem}>
                  <span className={styles.featureIcon}>{feature.icon}</span>
                  <h3>{feature.title}</h3>
                  <p>{feature.description}</p>
                </div>
              ))}
            </div>
          </div>

          {/* Back Button */}
          <div className={styles.backButtonWrapper}>
            <Link href="/services" className={styles.backBtn}>
              <span>‚Üê</span> –ù–∞–∑–∞–¥ –∫ —É—Å–ª—É–≥–∞–º
            </Link>
          </div>
        </div>
      </div>

      <Footer />
    </>
  );
}

