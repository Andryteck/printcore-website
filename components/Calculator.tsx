'use client';

import { useState } from 'react';
import { Service } from '@/lib/features/services/servicesSlice';
import styles from '@/styles/components/Calculator.module.css';

interface CalculatorProps {
  service: Service;
}

interface PriceOption {
  quantity: number;
  price: number;
  pricePerUnit: number;
}

export default function Calculator({ service }: CalculatorProps) {
  const [printType, setPrintType] = useState<'one-side' | 'two-side'>('one-side');
  const [selectedQuantity, setSelectedQuantity] = useState(250);
  const [designOption, setDesignOption] = useState<'template' | 'constructor' | 'upload'>('template');
  const [designFromScratch, setDesignFromScratch] = useState(false);
  const [designWishes, setDesignWishes] = useState('');
  const [showAllPrices, setShowAllPrices] = useState(false);

  const priceOptions: PriceOption[] = [
    { quantity: 250, price: 845, pricePerUnit: 3.38 },
    { quantity: 500, price: 940, pricePerUnit: 1.88 },
    { quantity: 1000, price: 1090, pricePerUnit: 1.09 },
    { quantity: 2000, price: 2100, pricePerUnit: 1.05 },
    { quantity: 3000, price: 3090, pricePerUnit: 1.03 },
    { quantity: 5000, price: 5100, pricePerUnit: 1.02 },
  ];

  const selectedPrice = priceOptions.find(p => p.quantity === selectedQuantity);
  const totalPrice = selectedPrice ? selectedPrice.price : 0;
  const bonusPoints = (totalPrice * 0.05).toFixed(2);
  const designPrice = designFromScratch ? 500 : 0;
  const finalPrice = totalPrice + designPrice + (printType === 'two-side' ? 200 : 0);

  const visiblePrices = showAllPrices ? priceOptions : priceOptions.slice(0, 5);

  const handleAddToCart = () => {
    alert(`–î–æ–±–∞–≤–ª–µ–Ω–æ –≤ –∫–æ—Ä–∑–∏–Ω—É!\n\n–£—Å–ª—É–≥–∞: ${service.title}\n–¢–∏—Ä–∞–∂: ${selectedQuantity} —à—Ç.\n–ü–µ—á–∞—Ç—å: ${printType === 'one-side' ? '–æ–¥–Ω–æ—Å—Ç–æ—Ä–æ–Ω–Ω—è—è' : '–¥–≤—É—Å—Ç–æ—Ä–æ–Ω–Ω—è—è'}\n–ò—Ç–æ–≥–æ: ${finalPrice} —Ä—É–±.`);
  };

  return (
    <div className={styles.calculator}>
      <div className={styles.header}>
        <h2>–†–∞—Å—Å—á–∏—Ç–∞–π—Ç–µ —Å—Ç–æ–∏–º–æ—Å—Ç—å –∏ –æ—Ñ–æ—Ä–º–∏—Ç–µ –∑–∞–∫–∞–∑</h2>
      </div>

      {/* Step 1: Print Options */}
      <div className={styles.section}>
        <div className={styles.sectionTitle}>
          <span className={styles.stepNumber}>1</span>
          <h3>–í—ã–±–µ—Ä–∏—Ç–µ –æ–ø—Ü–∏–∏ –ø–µ—á–∞—Ç–∏</h3>
        </div>

        <div className={styles.printOptions}>
          <label className={`${styles.optionCard} ${printType === 'one-side' ? styles.selected : ''}`}>
            <input
              type="radio"
              name="printType"
              value="one-side"
              checked={printType === 'one-side'}
              onChange={() => setPrintType('one-side')}
            />
            <div className={styles.optionIcon}>
              <img src="https://static.wow2print.com/storage/2177/store/productModule/89658727863eb610a4bedf5.84158351.png" alt="1-—Å—Ç–æ—Ä–æ–Ω–Ω—è—è" />
            </div>
            <div className={styles.optionLabel}>1-—Å—Ç–æ—Ä–æ–Ω–Ω—è—è —Ü–≤–µ—Ç–Ω–∞—è –ø–µ—á–∞—Ç—å</div>
          </label>

          <label className={`${styles.optionCard} ${printType === 'two-side' ? styles.selected : ''}`}>
            <input
              type="radio"
              name="printType"
              value="two-side"
              checked={printType === 'two-side'}
              onChange={() => setPrintType('two-side')}
            />
            <div className={styles.optionIcon}>
              <img src="https://static.wow2print.com/storage/2177/store/productModule/124914042763eb60e66c9e32.99976629.png" alt="2-—Å—Ç–æ—Ä–æ–Ω–Ω—è—è" />
            </div>
            <div className={styles.optionLabel}>2-—Å—Ç–æ—Ä–æ–Ω–Ω—è—è —Ü–≤–µ—Ç–Ω–∞—è –ø–µ—á–∞—Ç—å</div>
          </label>
        </div>
      </div>

      {/* Step 2: Quantity */}
      <div className={styles.section}>
        <div className={styles.sectionTitle}>
          <span className={styles.stepNumber}>2</span>
          <h3>–í—ã–±–µ—Ä–∏—Ç–µ —Ç–∏—Ä–∞–∂</h3>
        </div>

        <div className={styles.alert}>
          –ß–µ–º –±–æ–ª—å—à–µ —Ç–∏—Ä–∞–∂, —Ç–µ–º –≤—ã–≥–æ–¥–Ω–µ–µ —Ü–µ–Ω–∞ –∑–∞ —à—Ç.
        </div>

        <div className={styles.priceGrid}>
          <div className={styles.gridHeader}>
            <div>–¢–∏—Ä–∞–∂ (—à—Ç)</div>
            <div>–°—Ä–æ–∫ –∏–∑–≥–æ—Ç. 27.10.25</div>
          </div>
          
          {visiblePrices.map((option) => (
            <div
              key={option.quantity}
              className={`${styles.priceRow} ${selectedQuantity === option.quantity ? styles.selected : ''}`}
              onClick={() => setSelectedQuantity(option.quantity)}
            >
              <div className={styles.quantity}>
                {option.quantity.toLocaleString('ru-RU')}
              </div>
              <div className={styles.priceBlock}>
                <div className={styles.totalPrice}>
                  {option.price.toFixed(2)} ‚ÇΩ
                </div>
                <div className={styles.unitPrice}>
                  {option.pricePerUnit.toFixed(2)} ‚ÇΩ –∑–∞ —à—Ç.
                </div>
              </div>
            </div>
          ))}
        </div>

        <button 
          className={styles.showAllBtn}
          onClick={() => setShowAllPrices(!showAllPrices)}
        >
          {showAllPrices ? '–°–≤–µ—Ä–Ω—É—Ç—å' : '–†–∞–∑–≤–µ—Ä–Ω—É—Ç—å –≤—Å–µ —Ü–µ–Ω—ã'}
        </button>
      </div>

      {/* Step 3: Design Options */}
      <div className={styles.section}>
        <div className={styles.sectionTitle}>
          <span className={styles.stepNumber}>3</span>
          <h3>–û–ø—Ü–∏–∏ –¥–∏–∑–∞–π–Ω–∞</h3>
        </div>

        <label className={styles.checkbox}>
          <input
            type="checkbox"
            checked={designFromScratch}
            onChange={(e) => setDesignFromScratch(e.target.checked)}
          />
          <span>–†–∞–∑—Ä–∞–±–æ—Ç–∫–∞ –¥–∏–∑–∞–π–Ω–∞ —Å –Ω—É–ª—è</span>
          <span className={styles.priceTag}>(–æ—Ç +500.00 ‚ÇΩ)</span>
        </label>

        {designFromScratch && (
          <>
            <div className={styles.textarea}>
              <label>–ù–ê–ü–ò–®–ò–¢–ï –°–í–û–ò –ü–û–ñ–ï–õ–ê–ù–ò–Ø –ü–û –î–ò–ó–ê–ô–ù–£, –ú–´ –û–ë–Ø–ó–ê–¢–ï–õ–¨–ù–û –ò–• –£–ß–¢–Å–ú</label>
              <textarea
                value={designWishes}
                onChange={(e) => setDesignWishes(e.target.value)}
                placeholder="–û–ø–∏—à–∏—Ç–µ –≤–∞—à–∏ –ø–æ–∂–µ–ª–∞–Ω–∏—è..."
                maxLength={255}
              />
            </div>

            <div className={styles.fileUpload}>
              <label>–ó–ê–ì–†–£–ó–ò–¢–ï –ü–†–ò–ú–ï–† –ñ–ï–õ–ê–ï–ú–û–ì–û –î–ò–ó–ê–ô–ù–ê</label>
              <button className={styles.uploadBtn}>–ó–∞–≥—Ä—É–∑–∏—Ç—å</button>
              <p className={styles.fileInfo}>–î–æ–ø—É—Å—Ç–∏–º—ã–µ —Ñ–æ—Ä–º–∞—Ç—ã: PDF, PNG, JPG, JPEG, PSD, GIF, CDR, AI</p>
            </div>
          </>
        )}
      </div>

      {/* Design Selection */}
      <div className={styles.section}>
        <h3 className={styles.designTitle}>–î–∏–∑–∞–π–Ω</h3>
        <div className={styles.designOptions}>
          <label className={`${styles.designCard} ${designOption === 'template' ? styles.active : ''}`}>
            <input
              type="radio"
              name="designOption"
              value="template"
              checked={designOption === 'template'}
              onChange={() => setDesignOption('template')}
            />
            <div className={styles.designIcon} style={{ backgroundColor: '#E2F6E8' }}>üìã</div>
            <div>
              <div className={styles.designCardTitle}>–ì–æ—Ç–æ–≤—ã–π –¥–∏–∑–∞–π–Ω</div>
              <div className={styles.designCardDesc}>–í—ã–±–µ—Ä–∏—Ç–µ –≤–∞—Ä–∏–∞–Ω—Ç –∏–∑ —à–∞–±–ª–æ–Ω–æ–≤</div>
            </div>
          </label>

          <label className={`${styles.designCard} ${designOption === 'constructor' ? styles.active : ''}`}>
            <input
              type="radio"
              name="designOption"
              value="constructor"
              checked={designOption === 'constructor'}
              onChange={() => setDesignOption('constructor')}
            />
            <div className={styles.designIcon} style={{ backgroundColor: '#FEEBC8' }}>üé®</div>
            <div>
              <div className={styles.designCardTitle}>–°–æ–∑–¥–∞—Ç—å —Å –Ω—É–ª—è</div>
              <div className={styles.designCardDesc}>–ö–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä –ø–æ–º–æ–∂–µ—Ç –≤–∞–º —Å–¥–µ–ª–∞—Ç—å –≤—Å–µ —á—Ç–æ –≤—ã —Ö–æ—Ç–∏—Ç–µ</div>
            </div>
          </label>

          <label className={`${styles.designCard} ${designOption === 'upload' ? styles.active : ''}`}>
            <input
              type="radio"
              name="designOption"
              value="upload"
              checked={designOption === 'upload'}
              onChange={() => setDesignOption('upload')}
            />
            <div className={styles.designIcon} style={{ backgroundColor: '#DBF0FC' }}>üì§</div>
            <div>
              <div className={styles.designCardTitle}>–°–≤–æ–π –º–∞–∫–µ—Ç</div>
              <div className={styles.designCardDesc}>–í—ã–±–µ—Ä–∏—Ç–µ —Ñ–∞–π–ª —Å –∫–æ–º–ø—å—é—Ç–µ—Ä–∞ –∏ –∑–∞–≥—Ä—É–∑–∏—Ç–µ –µ–≥–æ</div>
            </div>
          </label>
        </div>
      </div>

      {/* Summary */}
      <div className={styles.summary}>
        <h3>–ò—Ç–æ–≥</h3>
        <div className={styles.summaryGrid}>
          <div className={styles.summaryPrice}>
            <div className={styles.finalPrice}>{finalPrice.toFixed(2)} ‚ÇΩ</div>
            <div className={styles.bonusInfo}>
              –í—ã –ø–æ–ª—É—á–∏—Ç–µ <strong>{bonusPoints}</strong> –±–æ–Ω—É—Å–æ–≤
            </div>
          </div>

          <div className={styles.summaryDetails}>
            <div className={styles.productName}>{service.title}</div>
            <div className={styles.productQty}>{selectedQuantity} —à—Ç.</div>
            <div className={styles.productParams}>
              {printType === 'one-side' ? '1-—Å—Ç–æ—Ä–æ–Ω–Ω—è—è' : '2-—Å—Ç–æ—Ä–æ–Ω–Ω—è—è'} —Ü–≤–µ—Ç–Ω–∞—è –ø–µ—á–∞—Ç—å.
            </div>
          </div>
        </div>
      </div>

      {/* Add to Cart Button */}
      <div className={styles.actions}>
        <button className={styles.addToCartBtn} onClick={handleAddToCart}>
          {designOption === 'template' ? '–í—ã–±—Ä–∞—Ç—å –¥–∏–∑–∞–π–Ω' : 
           designOption === 'constructor' ? '–°–æ–∑–¥–∞—Ç—å –≤ –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä–µ' : 
           '–ó–∞–≥—Ä—É–∑–∏—Ç—å –º–∞–∫–µ—Ç'}
        </button>
      </div>
    </div>
  );
}

